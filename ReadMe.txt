With the prevalence of graph databases in multiple domains and its vast applications, there is also an increased need for optimization in terms of representing the graph structure and querying in the best possible way. Most of the databases tend to have hierarchical and continuous data variables such as time. Ordering the events occurring over a period of time has huge applications in the area of time varying databases where each event can eventually be represented by a unique sequence of time ordered bits. However, in real time, performance time is what matters when the database is queried. This work tries to identify and evaluate the factors that can influence the performance of a time tree in the graph database. Experiments and trails are conducted on a database of Movies collected from the Neo4j repository. Analysing the observations and metrics from the experiment reveals that selectivity factor and number of nodes over a time range together have a profound effect on the performance of a time tree. A comparison of the metrics for both the Time Tree model and the original model with indexes is made for different types of queries which yielded interesting results. These results can be further utilized to come up with a heuristic factor to determine when to use a query with time tree modelling. The results also exhibit interesting findings about scenarios where nodes that are not connected to the time tree are fetched through queries using a time tree model.